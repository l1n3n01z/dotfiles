# note, tmux is not restarted when you reenter an attached session
# this is needed so that tmux does not do garbled stuff in neovim (and possibly other contexts)
# set-window-option -g utf8 on  "Deprecated since 2.2"
# https://stackoverflow.com/questions/35016458/how-to-write-if-statement-in-tmux-conf-to-set-different-options-for-different-t
# TODO check tmux version for above?

# can we do this once on login shell?
# note does not work in fish
# run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -d' ' -f2 | sed 's/[a-z]//')"

# -- this is ok, but possibly not needed
## set -g default-terminal "screen-256color"
## if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

# set -as terminal-features 'contour:sixel'
# set -as terminal-overrides '*:Sync@'
# set -as terminal-overrides ',*:Sxl' # sixel support

# play well with vim escape key
set -s escape-time 0
# set -s escape-time 10
# set -s escape-time 0

## setw -g mode-keys vi

# Enable mouse mode (tmux 2.1 and above)
## set -g mouse on
# always pass right click through for pasting
# oh noes! doesn't work for terminal
# bind-key -T root MouseDown3Pane select-pane -t= ; send-keys -M
# this hopefully works better
# oh noes, only works in tmux 3.3 and above
# bind-key -T root MouseDown3Pane if-shell -F -t = "#{||:#{mouse_any_flag},#{pane_in_mode}}" "select-pane -t=; send-keys -M" "refresh-client -l; paste-buffer"
# bind-key -T root MouseDown3Pane if-shell -F -t = "#{||:#{mouse_any_flag},#{pane_in_mode}}" "select-pane -t=; send-keys -M" "refresh-client -l; paste-buffer"
# bind -T root MouseDown3Pane run -b "xclip -o | tmux load-buffer - && tmux paste-buffer -s ' '"

bind Space copy-mode

# Use v to trigger selection    
# bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi v  if -F "#{selection_present}" { send -X clear-selection } { send -X begin-selection }

# Use y to yank current selection
bind -T copy-mode-vi y send-keys -X copy-selection
# bind -T copy-mode-vi Escape send -X cancel
# bind -T copy-mode-vi Escape  if -F "#{selection_present}" { send -X clear-selection } { send -X cancel }

# better tmux prefix, same as vim
# unbind C-b
# set-option -g prefix C-Space
# bind C-Space send-prefix

# split panes using | and -
unbind '"'
unbind %
bind | split-window -h
bind / split-window -h
bind - split-window -v


# Reload tmux config
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display 'tmux.conf sourced'

# 0 is too far from ` ;)
set -g base-index 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

set -g renumber-windows on 


# use telescope-tmux for picking sessions and windows 
# note zsh syntax
# if-shell -b '[ $(echo "$TMUX_VERSION >= 3.2" | bc -l) = 1 ]' {
  # unbind s
  # unbind w
  # bind s display-popup -E -w 80% -h 80% nvim --cmd "let g:minimal=1" -c ":Telescope tmux sessions quit_on_select=true"
  # bind w display-popup -E -w 80% -h 80% nvim --cmd "let g:minimal=1" -c ":Telescope tmux windows quit_on_select=true"
# }

# set -g pane-border-format "format"
# set -g pane-border-status "top"
# set -g pane-border-status "bottom"

# Panes
# set -g pane-active-border-style "fg=$_tmux_blue"
# set -g message-style "fg=$_tmux_grey_l,bg=$_tmux_grey_d"
# set -g pane-border-style "fg=white"
# set -g display-panes-colour "black"
# set -g display-panes-active-colour "white"

# set -g pane-border-status "off"
# set -g pane-border-format "[#[fg=white]#{?pane_active,#[bold],} :#P: #T #[fg=default,nobold]]"
#
# # Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
# set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
# set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
# set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
# set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
# set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

#### COLOUR (Solarized dark)

# status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\" %H:%M %d-%b-%y"
#default status-right
# current status-right
#
# set -g status-right "%H:%M %d-%b-%y "
# set -g status-right "#[fg=#(pomodoro tmux-color)] #(pomodoro status -f '%%t %!r üçÖ') #[fg=yellow]#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}#{=21:pane_title} %H:%M %d-%b-%y "
# set -g status-right "#[fg=red] #{21:pane_title} %H:%M %d-%b-%y "
# this reproduces the issue
set -g status-right-length 60
set -g status-right "#[fg=red] ‚ùóÔ∏è  #{21:pane_title} %H:%M:%S %d-%b-%y "

# set-option -g status-interval 15
set-option -g status-interval 1

# default statusbar colors
# set-option -g status-style fg=yellow,bg=black #yellow and base02

# default window title colors
# set-window-option -g window-status-style fg=brightblue,bg=default #base0 and default
#set-window-option -g window-status-style dim

# active window title colors
# set-window-option -g window-status-current-style fg=brightred,bg=default #orange and default
#set-window-option -g window-status-current-style bright

# pane border
# set-option -g pane-border-style fg=black #base02
# set-option -g pane-active-border-style fg=white #base01

# message text
# set-option -g message-style fg=yellow,bg=default #orange and base01

# pane number display
# set-option -g display-panes-active-colour brightred #orange
# set-option -g display-panes-colour blue #blue

# clock
# set-window-option -g clock-mode-colour green #green

# bell
# set-window-option -g window-status-bell-style fg=black,bg=red #base02, red

#set -g @sessionx-bind 'j'

# %if "#{WSL_DISTRO_NAME}" 
# set -g @override_copy_command 'win32yank.exe -i'
# %endif

# plugin manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'omerxx/tmux-sessionx'
# set -g @plugin 'tmux-plugins/tmux-sensible'

run '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm'
